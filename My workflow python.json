{
  "name": "My workflow python",
  "nodes": [
    {
      "parameters": {},
      "id": "8bd5e8cf-c6b2-48ca-9645-0055b0fbe3fe",
      "name": "Manual Trigger",
      "type": "n8n-nodes-base.manualTrigger",
      "typeVersion": 1,
      "position": [
        -96,
        -80
      ]
    },
    {
      "parameters": {
        "values": {
          "string": [
            {
              "name": "spreadsheet_token",
              "value": "Og4isDZNPhhXQcteLJRcmdMPnjc"
            },
            {
              "name": "sheet_name",
              "value": "prd_model_sheet"
            },
            {
              "name": "app_id",
              "value": "cli_a49bc51d84b9900e"
            },
            {
              "name": "app_secret",
              "value": "t0tVgm1aS0jnG5O6v7hUpextQqpVobD2"
            },
            {
              "name": "range",
              "value": "A2:B3"
            },
            {
              "name": "status_column",
              "value": "D"
            },
            {
              "name": "product_image_column",
              "value": "A"
            },
            {
              "name": "model_image_column",
              "value": "B"
            },
            {
              "name": "prompt_column",
              "value": "C"
            },
            {
              "name": "apiKey",
              "value": "d4b17e6ea9474695965f3f3c9dd53c1d"
            },
            {
              "name": "workflowid",
              "value": "1959150471611101185"
            }
          ]
        },
        "options": {}
      },
      "id": "751376a1-0fd3-4b93-b877-62799a9127d8",
      "name": "Set Config",
      "type": "n8n-nodes-base.set",
      "typeVersion": 1,
      "position": [
        128,
        -80
      ]
    },
    {
      "parameters": {
        "method": "POST",
        "url": "https://open.feishu.cn/open-apis/auth/v3/tenant_access_token/internal",
        "sendHeaders": true,
        "headerParameters": {
          "parameters": [
            {
              "name": "Content-Type",
              "value": "application/json"
            }
          ]
        },
        "sendBody": true,
        "bodyParameters": {
          "parameters": [
            {
              "name": "app_id",
              "value": "={{ $node[\"Set Config\"].json[\"app_id\"] }}"
            },
            {
              "name": "app_secret",
              "value": "={{ $node[\"Set Config\"].json[\"app_secret\"] }}"
            }
          ]
        },
        "options": {}
      },
      "id": "090633d7-50a4-4894-bd33-96504af976a0",
      "name": "Get Access Token",
      "type": "n8n-nodes-base.httpRequest",
      "typeVersion": 4,
      "position": [
        400,
        -144
      ]
    },
    {
      "parameters": {
        "jsCode": "// 验证并提取access token\nconst response = $input.all()[0].json;\n\nif (response.code !== 0 || !response.tenant_access_token) {\n  throw new Error(`获取token失败: code=${response.code}, msg=${response.msg}`);\n}\n\nconsole.log('Token获取成功');\n\nreturn {\n  access_token: response.tenant_access_token,\n  expires_in: response.expire\n};"
      },
      "id": "7cbfa1d7-a39d-4137-b3b6-9c5b278a059a",
      "name": "Validate Token",
      "type": "n8n-nodes-base.code",
      "typeVersion": 2,
      "position": [
        624,
        -144
      ]
    },
    {
      "parameters": {
        "url": "=https://open.feishu.cn/open-apis/sheets/v3/spreadsheets/{{ $node[\"Set Config\"].json[\"spreadsheet_token\"] }}/sheets/query",
        "sendHeaders": true,
        "headerParameters": {
          "parameters": [
            {
              "name": "Authorization",
              "value": "=Bearer {{ $node[\"Validate Token\"].json[\"access_token\"] }}"
            }
          ]
        },
        "options": {}
      },
      "id": "8e6069af-d7fa-4057-8c93-a0cf05b9aaf2",
      "name": "Get Sheets Info",
      "type": "n8n-nodes-base.httpRequest",
      "typeVersion": 4,
      "position": [
        848,
        -144
      ]
    },
    {
      "parameters": {
        "jsCode": "// 查找目标工作表的sheet_id\nconst response = $input.all()[0].json;\nconst config = $node[\"Set Config\"].json;\n\nif (response.code !== 0) {\n  throw new Error(`获取工作表信息失败: ${response.msg}`);\n}\n\nconst sheets = response.data?.sheets || [];\nif (sheets.length === 0) {\n  throw new Error('表格中没有找到任何工作表');\n}\n\nconsole.log('找到工作表:', sheets.map(s => s.title));\n\n// 根据工作表名称查找\nlet targetSheet = null;\nif (config.sheet_name) {\n  targetSheet = sheets.find(sheet => sheet.title === config.sheet_name);\n}\n\n// 如果没找到，使用第一个工作表\nif (!targetSheet) {\n  targetSheet = sheets[0];\n  console.log(`使用第一个工作表: ${targetSheet.title}`);\n} else {\n  console.log(`找到目标工作表: ${targetSheet.title}`);\n}\n\nreturn {\n  sheet_id: targetSheet.sheet_id,\n  sheet_title: targetSheet.title,\n  all_sheets: sheets.map(s => ({ id: s.sheet_id, title: s.title })),\n  access_token: $node[\"Validate Token\"].json[\"access_token\"]\n};"
      },
      "id": "5ee531ca-7415-444b-90eb-d5613200ae7b",
      "name": "Find Target Sheet",
      "type": "n8n-nodes-base.code",
      "typeVersion": 2,
      "position": [
        1072,
        -144
      ]
    },
    {
      "parameters": {
        "url": "=https://open.feishu.cn/open-apis/sheets/v2/spreadsheets/{{ $node[\"Set Config\"].json[\"spreadsheet_token\"] }}/values/{{ $node[\"Find Target Sheet\"].json[\"sheet_id\"] }}!{{ $node[\"Set Config\"].json[\"range\"] }}",
        "sendHeaders": true,
        "headerParameters": {
          "parameters": [
            {
              "name": "Authorization",
              "value": "=Bearer {{ $node[\"Find Target Sheet\"].json[\"access_token\"] }}"
            }
          ]
        },
        "options": {}
      },
      "id": "50a4cee7-4a85-4c91-84cc-f6b673db5b93",
      "name": "Get Cell Values",
      "type": "n8n-nodes-base.httpRequest",
      "typeVersion": 4,
      "position": [
        1280,
        -144
      ]
    },
    {
      "parameters": {
        "jsCode": "// 解析表格数据，专门处理产品图、模特图、提示词、状态字段\nconst response = $input.all()[0].json;\nconst config = $node[\"Set Config\"].json;\nconst sheetInfo = $node[\"Find Target Sheet\"].json;\nif (response.code !== 0) {\n  throw new Error(`获取单元格数据失败: ${response.msg}`);\n}\nconst valueRange = response.data?.valueRange;\nif (!valueRange || !valueRange.values || valueRange.values.length === 0) {\n  return {\n    success: false,\n    error: \"表格数据为空\",\n    sheet_info: sheetInfo\n  };\n}\nconst values = valueRange.values;\nconsole.log(`获取到 ${values.length} 行数据`);\n\n// 定义标准列结构\nconst columnMapping = {\n  'A': 'product_image',    // 产品图\n  'B': 'model_image',      // 模特图 \n  'C': 'prompt',           // 提示词\n  'D': 'is_read'          // 是否已读取\n};\n\n// 查找表头行（第一个非空行）\nlet headerRowIndex = 0; // 假设第一行是表头或直接是数据\nlet headers = ['产品图', '模特图', '提示词', '是否已读取'];\n// 检查第一行是否是表头\nif (values.length > 0) {\n  const firstRow = values[0] || [];\n  const hasTextHeaders = firstRow.some(cell => \n    cell && typeof cell === 'string' && \n    ['产品图', '模特图', '提示词', '是否已读取', 'product', 'model', 'prompt', 'read'].some(keyword => \n      cell.toLowerCase().includes(keyword.toLowerCase())\n    )\n  );\n  if (hasTextHeaders) {\n    headers = firstRow.map(cell => String(cell || '').trim());\n    headerRowIndex = 0;\n    console.log('检测到表头行:', headers);\n  } else {\n    // 没有表头，直接处理数据\n    headerRowIndex = -1;\n    console.log('未检测到表头，直接处理数据行');\n  }\n}\n\n// 处理数据行\nconst dataStartIndex = headerRowIndex >= 0 ? headerRowIndex + 1 : 0;\nconst dataRows = values.slice(dataStartIndex);\nconst processedData = [];\n\nfor (let i = 0; i < dataRows.length; i++) {\n  const row = dataRows[i] || [];\n  // 检查是否有任何内容（包括图片引用或文本）\n  const hasContent = row.some(cell => cell && String(cell).trim());\n  if (!hasContent) {\n    continue; // 跳过完全空的行\n  }\n\n  // 创建一个新对象来存储解析后的数据\n  const rowData = {\n    _row_number: dataStartIndex + i + 1, // 表格中的实际行号(1-based)\n    _original_data: row,\n    // 按列位置提取数据并进行类型解析\n    product_image: parseCellData(row[0]),      // A列：产品图\n    model_image: parseCellData(row[1]),        // B列：模特图\n    prompt: row[2] ? String(row[2]).trim() : '',             // C列：提示词\n    is_read: row[3] ? String(row[3]).trim() : ''             // D列：是否已读取\n  };\n\n  // 添加额外的字段映射以支持中文字段名\n  rowData['产品图'] = rowData.product_image;\n  rowData['模特图'] = rowData.model_image;\n  rowData['提示词'] = rowData.prompt;\n  rowData['是否已读取'] = rowData.is_read;\n\n  processedData.push(rowData);\n}\n\n// 辅助函数：解析单元格数据，如果是嵌入式图片，则提取其fileToken\nfunction parseCellData(cell) {\n  if (!cell) {\n    return '';\n  }\n\n  // 如果是字符串，直接返回\n  if (typeof cell === 'string') {\n    return cell.trim();\n  }\n\n  // 如果是对象，检查是否是 embed-image 类型\n  if (typeof cell === 'object' && cell.type === 'embed-image' && cell.fileToken) {\n    // 返回一个包含 fileToken 的对象，以便后续节点使用\n    return {\n      type: 'embed-image',\n      fileToken: cell.fileToken\n    };\n  }\n\n  // 其他情况，转换为字符串\n  return String(cell).trim();\n}\n\nconsole.log(`处理了 ${processedData.length} 行有效数据`);\nif (processedData.length > 0) {\n  console.log('第一行数据示例:', {\n    row_number: processedData[0]._row_number,\n    product_image: processedData[0].product_image ? '有图片数据' : '无',\n    model_image: processedData[0].model_image ? '有图片数据' : '无', \n    prompt: processedData[0].prompt ? processedData[0].prompt.substring(0, 50) + '...' : '无',\n    is_read: processedData[0].is_read\n  });\n}\n\nreturn {\n  success: true,\n  spreadsheet_token: config.spreadsheet_token,\n  sheet_id: sheetInfo.sheet_id,\n  sheet_title: sheetInfo.sheet_title,\n  range: valueRange.range,\n  headers: headers,\n  column_mapping: columnMapping,\n  header_row_index: headerRowIndex >= 0 ? headerRowIndex + 1 : 0,\n  total_rows: processedData.length,\n  data: processedData,\n  access_token: sheetInfo.access_token\n};"
      },
      "id": "e2a96af2-f249-43e2-8929-eb0ad6500509",
      "name": "Parse Data",
      "type": "n8n-nodes-base.code",
      "typeVersion": 2,
      "position": [
        1504,
        -144
      ]
    },
    {
      "parameters": {
        "conditions": {
          "options": {
            "caseSensitive": true,
            "leftValue": "",
            "typeValidation": "strict",
            "version": 2
          },
          "conditions": [
            {
              "id": "4c234fd2-653f-4491-b743-cff807bb78ac",
              "leftValue": "={{ $json.success }}",
              "rightValue": "",
              "operator": {
                "type": "boolean",
                "operation": "true",
                "singleValue": true
              }
            }
          ],
          "combinator": "and"
        },
        "options": {}
      },
      "type": "n8n-nodes-base.if",
      "typeVersion": 2.2,
      "position": [
        1728,
        -144
      ],
      "id": "c6120175-e6dc-44d0-a680-5d4bc851eeab",
      "name": "If"
    },
    {
      "parameters": {
        "jsCode": "// 获取从 Parse Data 节点传来的整个对象\nconst inputData = $input.all()[0].json;\n\n// 提取需要逐个处理的 data 数组\nconst dataArray = inputData.data;\n\n// 检查数组是否存在且不为空\nif (!Array.isArray(dataArray) || dataArray.length === 0) {\n  console.log('没有找到需要处理的数据项');\n  return []; // 返回空数组，不触发后续节点\n}\n\n// 将数组中的每一项作为独立的项目输出\nreturn dataArray.map(item => {\n  // 将原始的 metadata (如 access_token, spreadsheet_token 等) 与当前数据项合并\n  // 这样后续节点依然可以访问这些全局信息\n  return {\n    json: {\n      ...inputData, // 包含所有全局信息\n      ...item,      // 覆盖为当前项的具体数据 (product_image, prompt 等)\n      _item: item   // 保留原始项的引用，方便调试\n    }\n  };\n});"
      },
      "type": "n8n-nodes-base.code",
      "typeVersion": 2,
      "position": [
        1936,
        -80
      ],
      "id": "ddfc675b-1aec-46e8-acf0-7db1b70f3384",
      "name": "Code"
    },
    {
      "parameters": {
        "fieldToSplitOut": "data",
        "options": {}
      },
      "type": "n8n-nodes-base.splitOut",
      "typeVersion": 1,
      "position": [
        1968,
        64
      ],
      "id": "721ddfb9-cfff-4e9f-8d8d-4e7f03dc74c3",
      "name": "Split Out"
    },
    {
      "parameters": {
        "jsCode": "// 为每个流过的Item打印日志\nconsole.log(`正在处理第 ${$json._row_number} 行数据，产品图 fileToken: ${$json.product_image.fileToken}`);\n// 直接返回数据，不作修改\nreturn $input.all();"
      },
      "type": "n8n-nodes-base.code",
      "typeVersion": 2,
      "position": [
        2128,
        336
      ],
      "id": "86d20177-171c-4fd1-8443-8c7c35cee564",
      "name": "Log Row Processing"
    },
    {
      "parameters": {
        "url": "=https://open.feishu.cn/open-apis/drive/v1/medias/{{ $json.product_image.fileToken }}/download",
        "sendHeaders": true,
        "headerParameters": {
          "parameters": [
            {
              "name": "Authorization",
              "value": "=Bearer {{ $('Validate Token').item.json.access_token }}"
            }
          ]
        },
        "options": {
          "allowUnauthorizedCerts": true,
          "response": {
            "response": {
              "responseFormat": "file"
            }
          }
        }
      },
      "type": "n8n-nodes-base.httpRequest",
      "typeVersion": 4.2,
      "position": [
        2192,
        32
      ],
      "id": "f265c6b5-314c-4fbf-9d28-1729b0a19049",
      "name": "download Prd Img"
    },
    {
      "parameters": {
        "method": "POST",
        "url": "https://www.runninghub.cn/task/openapi/upload",
        "sendHeaders": true,
        "headerParameters": {
          "parameters": [
            {
              "name": "host",
              "value": "www.runninghub.cn"
            }
          ]
        },
        "sendBody": true,
        "contentType": "multipart-form-data",
        "bodyParameters": {
          "parameters": [
            {
              "name": "apiKey",
              "value": "={{ $('Set Config').item.json.apiKey }}"
            },
            {
              "parameterType": "formBinaryData",
              "name": "file",
              "inputDataFieldName": "data"
            }
          ]
        },
        "options": {}
      },
      "type": "n8n-nodes-base.httpRequest",
      "typeVersion": 4.2,
      "position": [
        2432,
        48
      ],
      "id": "eae34bca-fcd6-4391-92af-dcf6844bfc02",
      "name": "Prd img to Comfyui"
    },
    {
      "parameters": {
        "method": "POST",
        "url": "https://www.runninghub.cn/task/openapi/upload",
        "sendHeaders": true,
        "headerParameters": {
          "parameters": [
            {
              "name": "host",
              "value": "www.runninghub.cn"
            }
          ]
        },
        "sendBody": true,
        "contentType": "multipart-form-data",
        "bodyParameters": {
          "parameters": [
            {
              "name": "apiKey",
              "value": "={{ $('Set Config').item.json.apiKey }}"
            },
            {
              "parameterType": "formBinaryData",
              "name": "file",
              "inputDataFieldName": "data"
            }
          ]
        },
        "options": {}
      },
      "type": "n8n-nodes-base.httpRequest",
      "typeVersion": 4.2,
      "position": [
        2448,
        208
      ],
      "id": "7ac94752-5561-416d-97af-29571d5e9420",
      "name": "Model img to Comfyui"
    },
    {
      "parameters": {
        "url": "=https://open.feishu.cn/open-apis/drive/v1/medias/{{ $json.model_image.fileToken }}/download",
        "sendHeaders": true,
        "headerParameters": {
          "parameters": [
            {
              "name": "Authorization",
              "value": "=Bearer {{ $('Validate Token').item.json.access_token }}"
            }
          ]
        },
        "options": {
          "allowUnauthorizedCerts": true,
          "response": {
            "response": {
              "responseFormat": "file"
            }
          }
        }
      },
      "type": "n8n-nodes-base.httpRequest",
      "typeVersion": 4.2,
      "position": [
        2208,
        192
      ],
      "id": "42b49b51-b769-458b-9d65-1a252ae32856",
      "name": "download Model Img1"
    },
    {
      "parameters": {
        "assignments": {
          "assignments": [
            {
              "id": "857d7983-3895-4226-9535-46299b400ed9",
              "name": "apiKey",
              "value": "d4b17e6ea9474695965f3f3c9dd53c1d",
              "type": "string"
            },
            {
              "id": "f2770909-34cb-4a85-a25b-c078c81d15d5",
              "name": "workflowid",
              "value": "1959150471611101185",
              "type": "string"
            }
          ]
        },
        "options": {}
      },
      "type": "n8n-nodes-base.set",
      "typeVersion": 3.4,
      "position": [
        2768,
        128
      ],
      "id": "c651b5f5-e9b8-45e7-add0-5f53e6b6f4da",
      "name": "config"
    },
    {
      "parameters": {
        "method": "POST",
        "url": "https://www.runninghub.cn/task/openapi/upload",
        "sendHeaders": true,
        "headerParameters": {
          "parameters": [
            {
              "name": "host",
              "value": "www.runninghub.cn"
            }
          ]
        },
        "sendBody": true,
        "contentType": "multipart-form-data",
        "bodyParameters": {
          "parameters": [
            {
              "name": "apiKey",
              "value": "={{ $('config').item.json.apiKey }}"
            },
            {
              "parameterType": "formBinaryData",
              "name": "file",
              "inputDataFieldName": "data"
            }
          ]
        },
        "options": {}
      },
      "type": "n8n-nodes-base.httpRequest",
      "typeVersion": 4.2,
      "position": [
        3184,
        128
      ],
      "id": "c3d62ff2-3f0c-4337-99e4-04ed1cfc1f52",
      "name": "HTTP Request"
    },
    {
      "parameters": {
        "method": "POST",
        "url": "https://www.runninghub.cn/task/openapi/create",
        "sendHeaders": true,
        "headerParameters": {
          "parameters": [
            {
              "name": "Host",
              "value": "www.runninghub.cn"
            }
          ]
        },
        "sendBody": true,
        "specifyBody": "json",
        "jsonBody": "={\n  \"apiKey\": \"{{ $('config').item.json.apiKey }}\",\n  \"workflowId\": \"{{ $('config').item.json.workflowid }}\",\n  \"nodeInfoList\": [\n    {\n      \"nodeId\": \"293\",\n      \"fieldName\": \"image\",\n      \"fieldValue\": \"{{ $json.data.fileName }}\"\n    }\n  ]\n}",
        "options": {}
      },
      "type": "n8n-nodes-base.httpRequest",
      "typeVersion": 4.2,
      "position": [
        3392,
        128
      ],
      "id": "879bcc20-676e-4bcd-af71-cafd3edbac20",
      "name": "startworkflow"
    },
    {
      "parameters": {
        "amount": 2,
        "unit": "minutes"
      },
      "type": "n8n-nodes-base.wait",
      "typeVersion": 1.1,
      "position": [
        3600,
        128
      ],
      "id": "f0c04aba-e648-4fcd-ab4b-f1478df4d140",
      "name": "Wait",
      "webhookId": "4e38290a-cc72-4649-b8b9-47a0a76dacc5"
    },
    {
      "parameters": {
        "method": "POST",
        "url": "https://www.runninghub.cn/task/openapi/status",
        "sendHeaders": true,
        "headerParameters": {
          "parameters": [
            {
              "name": "Host",
              "value": "www.runninghub.cn"
            }
          ]
        },
        "sendBody": true,
        "bodyParameters": {
          "parameters": [
            {
              "name": "apiKey",
              "value": "={{ $('config').item.json.apiKey }}"
            },
            {
              "name": "taskId",
              "value": "={{ $('startworkflow').item.json.data.taskId }}"
            }
          ]
        },
        "options": {}
      },
      "type": "n8n-nodes-base.httpRequest",
      "typeVersion": 4.2,
      "position": [
        3776,
        128
      ],
      "id": "1a342a5e-6df4-4c23-896e-d1ad887bda82",
      "name": "status"
    },
    {
      "parameters": {
        "amount": 30
      },
      "type": "n8n-nodes-base.wait",
      "typeVersion": 1.1,
      "position": [
        4192,
        224
      ],
      "id": "f7f29a7c-dc4b-4565-ac78-9f19b336fdcd",
      "name": "Wait1",
      "webhookId": "785480c5-f72c-45ff-bce3-e230d4cc703f"
    },
    {
      "parameters": {
        "method": "POST",
        "url": "https://www.runninghub.cn/task/openapi/outputs",
        "sendHeaders": true,
        "headerParameters": {
          "parameters": [
            {
              "name": "Host",
              "value": "www.runninghub.cn"
            }
          ]
        },
        "sendBody": true,
        "bodyParameters": {
          "parameters": [
            {
              "name": "apiKey",
              "value": "={{ $('config').item.json.apiKey }}"
            },
            {
              "name": "taskId",
              "value": "={{ $('startworkflow').item.json.data.taskId }}"
            }
          ]
        },
        "options": {}
      },
      "type": "n8n-nodes-base.httpRequest",
      "typeVersion": 4.2,
      "position": [
        4336,
        128
      ],
      "id": "ee8d694b-4902-48cd-8e7c-3f8ae203c1d0",
      "name": "getResult"
    },
    {
      "parameters": {
        "url": "={{ $json.data[0].fileUrl }}",
        "options": {}
      },
      "type": "n8n-nodes-base.httpRequest",
      "typeVersion": 4.2,
      "position": [
        4544,
        128
      ],
      "id": "1a485482-ddd3-469e-8198-2650c6ddde68",
      "name": "Download"
    },
    {
      "parameters": {
        "options": {}
      },
      "type": "n8n-nodes-base.splitInBatches",
      "typeVersion": 3,
      "position": [
        3088,
        -96
      ],
      "id": "7bb887b6-9c23-4e6c-baf6-4a0ec7dfe3d2",
      "name": "Loop Over Items"
    },
    {
      "parameters": {
        "fileSelector": "/files/ImgInput/*.png",
        "options": {}
      },
      "type": "n8n-nodes-base.readWriteFile",
      "typeVersion": 1,
      "position": [
        2976,
        128
      ],
      "id": "4a3fe636-c18d-4d40-919d-33b9bc1ad141",
      "name": "Read Img",
      "alwaysOutputData": false
    },
    {
      "parameters": {
        "operation": "write",
        "fileName": "=/files/videoOutput/{{ $('Read Img').item.json.fileName.replace('.png', '.mp4')}}",
        "options": {}
      },
      "type": "n8n-nodes-base.readWriteFile",
      "typeVersion": 1,
      "position": [
        4752,
        128
      ],
      "id": "435038c9-2982-440b-b11d-ab592cb9657b",
      "name": "Write output"
    },
    {
      "parameters": {
        "conditions": {
          "options": {
            "caseSensitive": true,
            "leftValue": "",
            "typeValidation": "strict",
            "version": 2
          },
          "conditions": [
            {
              "id": "2c314b3f-c0ac-4dda-a04d-36360be51d6d",
              "leftValue": "={{ $json.data }}",
              "rightValue": "SUCCESS",
              "operator": {
                "type": "string",
                "operation": "equals",
                "name": "filter.operator.equals"
              }
            }
          ],
          "combinator": "and"
        },
        "options": {}
      },
      "type": "n8n-nodes-base.if",
      "typeVersion": 2.2,
      "position": [
        3984,
        128
      ],
      "id": "67689b9e-946f-4ab9-a242-024d28d7c675",
      "name": "If1"
    }
  ],
  "pinData": {},
  "connections": {
    "Manual Trigger": {
      "main": [
        [
          {
            "node": "Set Config",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Set Config": {
      "main": [
        [
          {
            "node": "Get Access Token",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Get Access Token": {
      "main": [
        [
          {
            "node": "Validate Token",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Validate Token": {
      "main": [
        [
          {
            "node": "Get Sheets Info",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Get Sheets Info": {
      "main": [
        [
          {
            "node": "Find Target Sheet",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Find Target Sheet": {
      "main": [
        [
          {
            "node": "Get Cell Values",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Get Cell Values": {
      "main": [
        [
          {
            "node": "Parse Data",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Parse Data": {
      "main": [
        [
          {
            "node": "If",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "If": {
      "main": [
        [
          {
            "node": "Code",
            "type": "main",
            "index": 0
          },
          {
            "node": "Split Out",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Split Out": {
      "main": [
        [
          {
            "node": "download Prd Img",
            "type": "main",
            "index": 0
          },
          {
            "node": "Log Row Processing",
            "type": "main",
            "index": 0
          },
          {
            "node": "download Model Img1",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "download Prd Img": {
      "main": [
        [
          {
            "node": "Prd img to Comfyui",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "download Model Img1": {
      "main": [
        [
          {
            "node": "Model img to Comfyui",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "config": {
      "main": [
        [
          {
            "node": "Read Img",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "HTTP Request": {
      "main": [
        [
          {
            "node": "startworkflow",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "startworkflow": {
      "main": [
        [
          {
            "node": "Wait",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Wait": {
      "main": [
        [
          {
            "node": "status",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "status": {
      "main": [
        [
          {
            "node": "If1",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Wait1": {
      "main": [
        [
          {
            "node": "status",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "getResult": {
      "main": [
        [
          {
            "node": "Download",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Download": {
      "main": [
        [
          {
            "node": "Write output",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Loop Over Items": {
      "main": [
        [],
        [
          {
            "node": "HTTP Request",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Read Img": {
      "main": [
        [
          {
            "node": "Loop Over Items",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Write output": {
      "main": [
        [
          {
            "node": "Loop Over Items",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "If1": {
      "main": [
        [
          {
            "node": "getResult",
            "type": "main",
            "index": 0
          }
        ],
        [
          {
            "node": "Wait1",
            "type": "main",
            "index": 0
          }
        ]
      ]
    }
  },
  "active": false,
  "settings": {
    "executionOrder": "v1"
  },
  "versionId": "2113d1b6-68c3-49d0-bcb2-d2e16eb45eca",
  "meta": {
    "instanceId": "1c4017eda22609e8b5dc86f484fd627aab7c8de5e9f63dc4e4a79ae1c7b90e0b"
  },
  "id": "XbxEKHKOc2lEV64K",
  "tags": []
}